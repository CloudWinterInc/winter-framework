<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cloudwinter.libs.winterframework</groupId>
    <artifactId>core</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>

        <!-- GAE properties -->
        <gae.version>1.9.15</gae.version>
        <gae.home>
            ${user.home}/.m2/repository/com/google/appengine/appengine-java-sdk/${gae.version}/appengine-java-sdk-${gae.version}
        </gae.home>
        <gae.application.version>1</gae.application.version>

        <!-- Don't let your Mac use a crazy non-standard encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- Google App Engine (GAE) -->
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-1.0-sdk</artifactId>
            <version>${gae.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-testing</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-stubs</artifactId>
            <version>${gae.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-api-labs</artifactId>
            <version>${gae.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.appengine</groupId>
            <artifactId>appengine-java-sdk</artifactId>
            <version>${gae.version}</version>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>

        <!-- Objectify for persistence. It uses the stock javax.persistence annotations -->
        <dependency>
            <groupId>com.googlecode.objectify</groupId>
            <artifactId>objectify</artifactId>
            <version>5.1.1</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.appengine</groupId>
                    <artifactId>appengine-api-1.0-sdk</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.appengine</groupId>
                    <artifactId>appengine-api-stubs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.appengine</groupId>
                    <artifactId>appengine-api-labs</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.appengine</groupId>
                    <artifactId>appengine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- Google Guava Libraries -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

        <!-- Google Guice -->
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-servlet</artifactId>
            <version>3.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-assistedinject</artifactId>
            <version>3.0</version>
        </dependency>

        <!-- Java Servlet Spec -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>0.5.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
            <version>6.1.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <!-- Generate compiled stuff in the folder used for development mode -->
        <outputDirectory>
            ${project.build.directory}/${project.build.finalName}/WEB-INF/classes
        </outputDirectory>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>1.7</source>
                    <target>1.7</target>
                    <compilerArgument>-XDignore.symbol.file=true
                    </compilerArgument>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <!--instrumentation>
                        <excludes>
                            <exclude>
                                com/soccyo/web/server/servlets/testdata/*Servlet.class
                            </exclude>
                        </excludes>
                    </instrumentation-->
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>cobertura</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Add source folders to test classpath in order to run gwt-tests as
                normal junit-tests -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.13</version>
                <configuration>
                    <argLine>-XX:-UseSplitVerifier</argLine>
                    <additionalClasspathElements>
                        <additionalClasspathElement>
                            ${project.build.sourceDirectory}
                        </additionalClasspathElement>
                        <additionalClasspathElement>
                            ${project.build.testSourceDirectory}
                        </additionalClasspathElement>
                    </additionalClasspathElements>
                    <useManifestOnlyJar>false</useManifestOnlyJar>
                    <forkMode>always</forkMode>
                    <printSummary>true</printSummary>
                </configuration>
            </plugin>


            <plugin>
                <groupId>com.google.appengine</groupId>
                <artifactId>appengine-maven-plugin</artifactId>
                <version>${gae.version}</version>
                <configuration>
                    <email>tomasdepriede@gmail.com</email>
                    <oauth2>false</oauth2>
                    <noCookies>true</noCookies>
                    <passin>true</passin>
                    <jvmFlags>
                        <jvmFlag>-Xdebug</jvmFlag>
                        <jvmFlag>
                            -Xrunjdwp:transport=dt_socket,address=5000,server=y,suspend=n
                        </jvmFlag>
                    </jvmFlags>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>